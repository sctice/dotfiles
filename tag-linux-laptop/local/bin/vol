#!/usr/bin/env bash

set -ueo pipefail

# Volume percentage to use for command "low"
low_default=30
high_default=60

# The percentage by which a media key volume up/down event raises/lowers volume. Determined via
# testing.
media_key_increment=6

# Use pactl to both set and show volume of the active sink.
main() {
  case "${1:-status}" in
    s|st|status) show_status ;;
    [0-9]|[1-9][0-9]|100) set_volume "$1" ;;
    m|mute) set_volume 0 ;;
    l|low) set_volume_low ;;
    h|high) set_volume_high ;;
    f|full) set_volume 100 ;;
    -h|--help|*) show_help ;;
  esac
}

# List all sinks. So far I've only seen a single sink listed: the active one.
_get_active_sink() {
  pactl list sinks
}

# Report the maximum volume percentage among all channels.
_get_volume_percent() {
  perl -nle 'if (/^\s*volume:/i) { @p = $_ =~ /\d+(?=%)/g; print join("\n", @p) }' \
    | sort -n \
    | tail -1
}

# Select just the name of the active port from the standard input. We use this to find the
# corresponding label (unfortunately, the active port is identified on a line following the port
# listing).
_get_active_port() {
  perl -nle '/^\s*active port: (.+)/i && print $1'
}

# Use the active port to extract the port label, which we interpret as everything after the port
# identifier and before the port metadata provided in parentheses.
_get_port_label() {
  local active_port="$1"
  echo "$active_port" >active_port
  perl -nle '/^\s*'"$active_port"': (.*) \(/i && print $1'
}

show_status() {
  local active_sink volume active_port label

  active_sink=$(_get_active_sink)
  volume=$(_get_volume_percent <<<"$active_sink")
  active_port=$(_get_active_port <<<"$active_sink")
  label=$(_get_port_label "$active_port" <<<"$active_sink")

  echo "${label}: ${volume}%"
}

set_volume_low() {
  if should_show_volume_ui; then
    set_volume $(("$low_default" - "$media_key_increment"))
    xdotool key --clearmodifiers XF86AudioRaiseVolume
  else
    set_volume "$low_default"
  fi
}

should_show_volume_ui() {
  ! tty -s && hash xdotool 2>/dev/null
}

set_volume_high() {
  if should_show_volume_ui; then
    set_volume $(("$high_default" + "$media_key_increment"))
    xdotool key --clearmodifiers XF86AudioRaiseVolume
  else
    set_volume "$high_default"
  fi
}

# Set the default sink to the requested volume (a percentage, 0-100) and then show the current
# volume if in an interactive terminal.
set_volume() {
  pactl set-sink-volume @DEFAULT_SINK@ "${1}%"
  if tty -s; then
    show_status
  fi
}

show_help() {
  echo "vol [s[t[atus]]]"
  echo "    PERCENT"
  echo "    m[ute]"
  echo "    l[ow]"
  echo "    h[igh]"
  echo "    f[ull]"
}

main "$@"
