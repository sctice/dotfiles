#!/bin/env bash

main() {
  w_with_cs | sort -n | drop_first_col | filter_mosh | make_table
}

w_with_cs() {
  w -h | while read user tty login idle jcpu pcpu what; do
    if [ "$user" = "$USER" ]; then continue; fi
    idle_cs=$(str_to_csec "$idle")
    echo $idle_cs,$user,$tty,$login,$idle,$jcpu,$pcpu,"$what"
  done
}

str_to_csec() {
  if [[ "$1" =~ ([0-9]+)\.([0-9]+)s ]]; then
    # 3.02s
    echo $((${BASH_REMATCH[1]#0} * 100 + ${BASH_REMATCH[2]#0}))
  elif [[ "$1" =~ ([0-9]+):([0-9]+)m ]]; then
    # 1:15m (1 hour, 15, minutes)
    echo $((${BASH_REMATCH[1]#0} * 360000 + ${BASH_REMATCH[2]#0} * 6000))
  elif [[ "$1" =~ ([0-9]+):([0-9]+) ]]; then
    # 3:41 (3 minutes, 41 seconds)
    echo $((${BASH_REMATCH[1]#0} * 6000 + ${BASH_REMATCH[2]#0} * 100))
  elif [[ "$1" =~ ([0-9]+)days ]]; then
    # 5days
    echo $((${BASH_REMATCH[1]#0} * 8640000))
  else
    echo "NA"
  fi
}

drop_first_col() {
  sed -E -e 's/^[^,]+,//'
}

filter_mosh() {
  # Shortens mosh_server process args, which otherwise wrap over several lines of output, listing
  # environment variables.
  perl -ple 's/(mosh-server(?:.(?!-l LANG))*).*/\1/'
}

make_table() {
  column --table --separator=, \
    --table-columns=USER,TTY,LOGIN,IDLE,JCPU,PCPU,WHAT
}

main "$@"
