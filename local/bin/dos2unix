#!/usr/bin/env python

"""\
Usage:
  dos2unix [FILE...]

Description:
  Convert non-unix line endings to unix line endings using Python's universal
  newlines functionality. Files are modified in-place, but if no file paths are
  given then read from the standard input and write to the standard output.
"""


import os
import sys
import tempfile


def main():
    if len(sys.argv) == 1:
        # Get a File object around STDIN with universal newlines. For binary
        # compatibility, sys.stdin is opened without universal newlines by
        # default.
        with os.fdopen(sys.stdin.fileno(), 'rU') as stdin:
            _convert(stdin, sys.stdout)
        sys.exit(0)
    if len(sys.argv) == 2 and sys.argv[1] in ['-h', '--help']:
        sys.stderr.write(__doc__)
        sys.exit(0)
    for infilepath in sys.argv[1:]:
        tmpfd, tmppath = tempfile.mkstemp()
        tmpfile = os.fdopen(tmpfd, 'wb')
        # Note the 'U' for univeral newlines.
        with open(infilepath, 'rU') as infile:
            _convert(infile, tmpfile)
        tmpfile.close()
        os.rename(tmppath, infilepath)


def _convert(infile, outfile):
    # This assumes that infile has been opened with universal newlines.
    for line in infile:
        outfile.write(line)


if __name__ == '__main__':
    main()
