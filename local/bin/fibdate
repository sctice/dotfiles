#!/usr/bin/env ruby

require 'date'
require 'optparse'

Options = Struct.new(:x, :n)


def main
  opts = parse_args ARGV
  fibs_after(opts.x).take(opts.n).each do |x|
    day = Date.today + x
    datestamp = day.strftime("%Y-%m-%d")
    printf "%5d %s\n", x, datestamp
  end
end

def parse_args(args)
  opts = Options.new(0, 3)
  parser = OptionParser.new do |p|
    p.banner = "
Usage: fibdate [-n NUM] AFTER

Print out NUM (default #{opts.n}) dates relative to today falling on a
Fibonacci sequence starting with the first Fibonacci number greater than the
provided argument, AFTER.

"
    p.on("-nNUM", Integer, "Select NUM dates") do |n|
      opts.n = n
    end
  end
  parser.parse!(args)
  if args.length < 1
    $stderr << parser.help
    exit 1
  end
  opts.x = args[0].to_i
  opts
end

def fibs_after(x)
  Enumerator.new do |enum|
    a, b = 1, 1
    loop do                                         
      a, b = b, a + b                               
      enum.yield b if b > x                         
    end                                             
  end                                               
end                                                 
                                                    
main if __FILE__ == $0
